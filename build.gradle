apply plugin: "java"
apply plugin: "groovy"
apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: 'maven-publish'
apply plugin: 'maven'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "com.palantir:gradle-flexversion:0.4.0"
        //classpath 'org.eclipse.jgit:org.eclipse.jgit:4.0.1.201506240215-r'
    }
}

repositories {
    jcenter()
    mavenCentral()

    dependencies {
      compile 'org.eclipse.jgit:org.eclipse.jgit:4.0.1.201506240215-r'
      compile 'org.jacoco:org.jacoco.report:0.7.5.201505241946'
      compile 'com.beust:jcommander:1.48'
      compile 'org.slf4j:slf4j-api:1.7.12'
      compile 'xmlpull:xmlpull:1.1.3.1'
    }
}

apply plugin: "gradle-flexversion"
flexversion.useTags = true
group "com.palantir"
version flexVersion()

dependencies {
    compile gradleApi()
    compile localGroovy()

    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "com.netflix.nebula:nebula-test:2.2.1"
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier "sources"
}

publishing {
  publications {
    ivy(MavenPublication) {
      from components.java

      artifact(sourceJar) {
        classifier "sources"
      }
    }
  }
  repositories {
    maven {
      url "$buildDir/localpublish/"
    }
  }
}

task zipPublish (type: Zip) {
  from ("${buildDir}/localpublish") {
    include '**/*'
    exclude '**/maven-metadata.xml*'
  }
  appendix = "release"
  destinationDir = file("${project.buildDir}/artifacts")
}

publish << {
  file("${project.buildDir}/artifacts").mkdirs()
  tasks.zipPublish.execute()
}
